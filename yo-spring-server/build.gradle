buildscript {
    ext.kotlin_version = '1.2.41'
    ext.spring_boot_version = '2.0.0.RELEASE'//'1.5.7.RELEASE'
    ext.spring_version = '4.3.11.RELEASE'
    //ext.kotlin_version = '1.1.60'
    ext.jackson_version = '2.9.2'
    ext.quasar_version = '0.7.6'
    ext.log4j_version = '2.7'
    ext.artemis_version = '2.6.2'
    ext.nodepluginVersion = '1.1.1'
    ext.node_version = "8.9.0"
    ext.springfox_version="2.7.0"
    ext.slf4j_version = '1.7.25'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
//        this dependency allow us to add NodeJS in our build
        classpath("com.moowork.gradle:gradle-node-plugin:${nodepluginVersion}")
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/exposed' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

//apply plugin: 'application'
apply plugin:"com.moowork.node"
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

// TODO http://mrhaki.blogspot.com/2016/12/spring-sweets-add-extra-build.html
//springBoot {
//    // This statement tells the Gradle Spring Boot plugin
//    // to generate a file
//    // build/resources/main/META-INF/build-info.properties
//    // that is picked up by Spring Boot to display
//    // via /info endpoint.
//    //localhost:20010/info
//    buildInfo()
//}

//bootJar {
//    baseName = 'gs-rest-service'
//    version =  '0.1.0'
//}
//
//bootRun {
//    //For Debugging ONLY
//    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=5020,suspend=y']
//}


kotlin {
    experimental {
        coroutines 'enable'
    }
}
sourceSets {
    main {
        resources {
            srcDir "./config/dev"
        }
    }
    test {
        resources {
            srcDir "./config/test"
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.2"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile("org.springframework.boot:spring-boot-starter-test")

    // Corda integration dependencies
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-finance:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
//    cordaCompile "net.corda:corda-jackson:$corda_release_version"
    cordaCompile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
//    testCompile "net.corda:corda-jackson:$corda_release_version"

    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
//    compile "org.springframework.boot:spring-boot-starter-log4j2:$spring_boot_version"
//    compile "org.apache.logging.log4j:log4j-web:2.7"
//    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
//    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"

    // these 2 libraries for plugin org.springframework.boot
    compile "org.apache.activemq:artemis-commons:$artemis_version"
    compile "org.apache.activemq:artemis-core-client:$artemis_version"

    // these 2 libraries is to enable swagger
    compile("io.springfox:springfox-swagger2:$springfox_version")
    compile("io.springfox:springfox-swagger-ui:$springfox_version")


//    compile group: 'org.springframework.security', name: 'spring-security-core', version: '5.0.4.RELEASE'
//    compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.0.4.RELEASE'
//    compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.0.4.RELEASE'
//    compile group: 'org.springframework.security', name: 'spring-security-config', version: '5.0.4.RELEASE'

//    compile("org.springframework.boot:spring-boot-devtools") {
//        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
//    }
    compile("io.jsonwebtoken:jjwt:0.7.0")
    compile('org.springframework.boot:spring-boot-starter'){
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }


    //For Spring JPA & Embeded HSQL DB
//    compile("org.springframework.boot:spring-boot-starter-data-jpa"){
//        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
//    }
//    compile("org.hsqldb:hsqldb")


    cordapp project(":")

    cordapp "$corda_release_group:corda-finance:$corda_release_version"

}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}


node {
    version = "$node_version"
    download = true
    nodeModulesDir = file("../UI/yo-angular")
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall')	{
    group = 'build'
    description = 'Compile client side folder for development'
    args = ['run','buildDev']
}

task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'application'
    description = "Build and watches the client side assets for rebuilding"
    args = ['run','buildWatch']
}

task buildClient(type:NpmTask, dependsOn:'npmInstall') {
    group = 'build'
    description = "Compile client side folder for production"
    args = ['run','build']
}

//bootRun.dependsOn(buildClientDev)
//jar.dependsOn(buildClient)


